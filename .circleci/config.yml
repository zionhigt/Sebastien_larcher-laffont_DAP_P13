version: 2.1

orbs:
  
  python: circleci/python@1.5.0
  docker: circleci/docker@2.1.2
  heroku: circleci/heroku@1.2.6


jobs:
  build:
    docker:
      - image: circleci/buildpack-deps
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Image
          command: |
            docker build -t orange-county-app .
      - run:
          name: Push Image
          command: |
            docker login --username=${DOCKER_USERNAME} --password=${DOCKER_PASSWORD}
            docker tag orange-county-app "sebdevdock/orange_county_lettings:${CIRCLE_SHA1}"
            docker push "sebdevdock/orange_county_lettings:${CIRCLE_SHA1}"
  test: 
    docker:
      - image: "sebdevdock/orange_county_lettings:${CIRCLE_SHA1}"
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests
          command: python3 manage.py test
  linting: 
    docker:
      - image: "sebdevdock/orange_county_lettings:${CIRCLE_SHA1}"
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run linter
          command: flake8

  install_deploy:
        description: |
            Download and install the Heroku CLI. Will be skipped if the CLI is already installed in the system.

        docker:
          - image: circleci/buildpack-deps
          
        steps:
            - run:
                command: |
                    if [[ $(command -v heroku) == "" ]]; then
                      curl https://cli-assets.heroku.com/install.sh | sh
                    else
                      echo "Heroku is already installed. No operation was performed."
                    fi
                name: Install Heroku CLI (If not installed)

  deploy: 
    docker:
      - image: "sebdevdock/orange_county_lettings:${CIRCLE_SHA1}"
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    
    steps:
      - heroku/push-docker-image


workflows:
  build-and-test: 
    jobs:
      - build
      - test:
          requires:
            - build
      - linting:
          requires:
            - test
      - install_deploy:
          requires:
            - linting
      - deploy:
          requires:
            - install_deploy
